[["index.html", "Big Data en R EST-383 Prefacio Audiencia Estructura del libro Software y acuerdos Bases de datos Agradecimiento", " Big Data en R EST-383 Alvaro Chirino Gutierrez 2021-02-21 Prefacio Este documento de Alvaro Chirino esta bajo la licencia de Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Audiencia El libro fue diseñado originalmente para los estudiantes de la materia de Programación Estadística I, una materia optativa del pregrado de la carrera de Estadística de la Universidad Mayor de San Andres. Este documento representa un primer acercamiento a los estudiantes de estadistica al software R y al mundo del Big Data. Estructura del libro El libro inluye 5 capitulos, estos son: Introducción a R Scraping Web en R Introducción al Big Data Big Data en R R y Spark Software y acuerdos sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19041) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=Spanish_Bolivia.1252 LC_CTYPE=Spanish_Bolivia.1252 ## [3] LC_MONETARY=Spanish_Bolivia.1252 LC_NUMERIC=C ## [5] LC_TIME=Spanish_Bolivia.1252 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods ## [7] base ## ## other attached packages: ## [1] rvest_0.3.6 xml2_1.3.2 ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.21 packrat_0.5.0 digest_0.6.27 R6_2.5.0 ## [5] magrittr_2.0.1 evaluate_0.14 httr_1.4.2 highr_0.8 ## [9] rlang_0.4.9 stringi_1.5.3 curl_4.3 rstudioapi_0.13 ## [13] rmarkdown_2.6 tools_4.0.3 stringr_1.4.0 xfun_0.19 ## [17] yaml_2.2.1 compiler_4.0.3 htmltools_0.5.0 knitr_1.31 Bases de datos En este documento se emplearan 4 bases de datos del contecto Boliviano: Encuesta a Hogares 2019 y 2019. Vivienda y Personas Encuesta de Demografía y Salud 1989 - 2008 Encuesta de Niños, niñas y adolescentes 2016 Computo oficial de las elecciones del 20 de Octubre de 2019 Bases de datos de contagios, muertes y recuperados del COVID-19 del Johns Hopkins Institute. Estas bases de datos se encuentran disponibles en formato \\(.RData\\) en el repositorio de Github del texto. Agradecimiento Eponine "],["introR.html", "Chapter 1 Introducción a R 1.1 ¿Qué es R? 1.2 R Markdown 1.3 R básico 1.4 Tipos de estructuras 1.5 Indexación 1.6 Loops y condiciones 1.7 Funciones 1.8 Importacion de datos 1.9 Dataframe y exploración 1.10 Estadística descriptiva 1.11 Muestreo e inferencia 1.12 Gráficos de origen 1.13 ggplot 1.14 Shiny 1.15 Ejercicios Propuestos", " Chapter 1 Introducción a R R es un software de libre distribución 1.1 ¿Qué es R? Comparación perfecta ### Algo de historia de R R es el hermano de S S es un lenguaje de programación estadística desarrollado por John Chambers de Bell Labs El objetivo de S era convertir las ideas en el software, de forma rápida y fielmente S fue creado en 1976 y se reinvento 1988 introduciendo muchos cambios En 1993, StatSci (fabricante de S-Plus) adquieren licencia exclusiva a S S-Plus integra S con una interfaz gráfica de usuario agradable y pleno apoyo al cliente R Fue creado por Ross Ihaka y Robert Gentleman de la University of Auckland, New Zealand 1.1.1 Acerca de R El proyecto R inicio en 1991 R apareció por primera vez en 1996 como un software de código abierto! Altamente personalizable a través de paquetes La comunidad R, se basa en el poder de la colaboración con miles de paquetes de libre disposición Existen muchas interfaces gráficas de usuario de R libres y comerciales (por ejemplo R Studio y Revolución) 1.1.2 ¿Qué es R? R es un conjunto integrado de servicios de software para la manipulación de datos, cálculo y representación gráfica. Incluye: instalación sencilla y un fácil almacenamiento de datos un conjunto de operadores para los cálculos en arrays, particularmente en las matrices facilidad en los gráficos y el análisis de datos y bien desarrollado, lenguaje de programación sencillo y eficaz que incluye condicionales, bucles, funciones recursivas definidos por el usuario. Altamente intuitivo A pesar de ser libre y de código abierto, R es ampliamente utilizado por los analistas de datos dentro de las empresas y el mundo académico. (R en the NY Times) Ver NY Times artículo. 1.1.3 Algunas referencias aRrgh: a newcomers (angry) guide to R by Tim Smith and Kevin Ushey Introductory Statistics with by Peter Dalgaard R tarjeta de comandos http://cran.r-project.org/doc/contrib/Short-refcard.pdf Tutorial de R http://www.cyclismo.org/tutorial/R/ R project and Bioconductor Mas avanzado: Hadley Wickhams book 1.1.4 RStudio RStudio es un ambiente libre y abierto de desarrollo de código integrado. multiplataforma El resaltado de sintaxis, completado de código, y la sangría inteligente gestionar fácilmente múltiples directorios de trabajo Flexible para el manejo de gráficos Integrado con Knitr Integrado con Git 1.1.5 Instalación R-CRAN https://cran.r-project.org/ (elija el Sistema operativo, descargue y siguiente, siguiente) R-Studio https://www.rstudio.com/ (elija el Sistema operativo, descargue y siguiente, siguiente) Nota: Para actualizar ambos paquetes: descargue la nueva versión e instale (las librerías no sufren cambios). 1.2 R Markdown R Markdown se introdujo por primera vez en el paquete knitr a principios de 2012. La idea era incrustar fragmentos de código (de R u otros) en los documentos de Markdown. De hecho, knitr soportó varios lenguajes de autoría desde el principio además de Markdown, incluidos LaTeX, HTML, AsciiDoc, reStructuredText y Textile. Markdown se ha convertido en el formato de documento más popular. La simplicidad de Markdown se destaca claramente entre estos formatos de documentos. 1.2.1 Instalación install.packages(&#39;rmarkdown&#39;) # Si se prefiere la versión en desarrollo if (!requireNamespace(&quot;devtools&quot;)) install.packages(&#39;devtools&#39;) devtools::install_github(&#39;rstudio/rmarkdown&#39;) Si el objetivo es usar Markdown para generar documentos PDF se necesita instalar Latex. Existen cheatsheets utiles para usar markdown, como: cheatsheets 1.2.2 YAML Header Al inicio del archivo y entre las lineas  --- title: Mi documento author: Juan Perez date: Marzo 22, 20220 output: html_document --- 1.2.3 Sintaxis básica Énfasis sobre el texto, *italic* **bold** _italic_ __bold__ Secciones, # Header 1 ## Header 2 ### Header 3 Items (viñetas) no ordenadas y ordenadas, * Item 1 * Item 2 + Item 2a + Item 2b 1. Item 1 2. Item 2 3. Item 3 + Item 3a + Item 3b Palabras clave con referencias web, [linked phrase](http://example.com) Imágenes simples o con titulo, ![](http://example.com/logo.png) ![optional caption text](figures/img.png) Blockquotes Its always better to give than to receive. A friend once said: &gt; It&#39;s always better to give than to receive. Ecuaciones en linea y en párrafo, En linea \\(\\sum_i{x^2}\\) o en párrafo: \\[\\sum_i{x^2}\\] $equation$ $$ equation $$ 1.2.4 Tipos de documentos beamer_presentation github_document html_document ioslides_presentation latex_document md_document odt_document pdf_document powerpoint_presentation rtf_document slidy_presentation word_document 1.2.5 Chunks Los chunks son entornos que permiten incluir código en R dentro de las distintos tipos de documentos que genera Rmarkdown, los chunks inician con ```{r} y termina con ```, también es posible introducir chunks en linea con el texto, esto se logra introduciendo Texto ... `r &lt;code&gt;` ... texto La parte {r} del chunk sirve para introducir las distintas opciones que va a contener ese chunk, las opciones disponibles son: echo (default = TRUE), muestra el código del chunk en la salida del documento eval (default = TRUE), corre el código del chunk message (default = TRUE), muestra los mensajes que genera el chunk Existen funciones útiles para mejorar las salidas de tablas, tales como xtable y kable de la librería knitr. 1.3 R básico R es una calculadora demasiado grande 123+456 ## [1] 579 4657*89 ## [1] 414473 12/34 ## [1] 0.3529412 2443-3434 ## [1] -991 1.3.1 Lógica de los comandos en R Como entiende R los comandos comando(argumentos, argumentos, ) Advertencia: No es posible resumir un comando R distingue mayúscula de minúscula Siempre cerrar los paréntesis R entiende el orden de los argumentos o su nombre clave Comando para pedir ayuda ?mean # comando para pedir ayuda ?lm Escribir varios comandos en una sola línea. 123*56 ; 435+3544 ; 454+56 ## [1] 6888 ## [1] 3979 ## [1] 510 #este es un comentario 1+4;78+89 ## [1] 5 ## [1] 167 1.3.2 Palabras reservadas y simbolos especiales de R NA: datos perdidos NULL: datos nulos Inf -Inf: Infinito #: comentario en el código TRUE (T), FALSE (F): valores lógicos NaN: not a number ?: Ayuda x, ,x + y, x - y ,x * y ,x / y ,x ^ y (**),x %% y (mod) ,x %/% y (div int) ! x, .x &amp; y ,x &amp;&amp; y ,x | y ,x || y , &lt;, &gt;=, &lt;= 1.3.3 Símbolos Lógicos !(5&gt;6) # negación ## [1] TRUE 2^2 == 4 # igualdad ## [1] TRUE 2^2 != 4 # desigualdad ## [1] FALSE (5&gt;6) &amp; (2^2==4) # y lógico ## [1] FALSE (5&gt;6) | (2^2==4) # ó lógico ## [1] TRUE (5&gt;6) &amp;&amp; (2^2==4) # y lógico ## [1] FALSE (5&gt;6) || (2^2==4) # ó lógico ## [1] TRUE 5 &gt;= 5 ## [1] TRUE 5 &lt;= 5 ## [1] TRUE 1.3.4 Asignación o creación de objetos (estructuras, variables) x&lt;-5 y=10 15-&gt;z x1&lt;&lt;-20 x2&lt;-&quot;Hola&quot; x3&lt;-&#39;hola&#39; z*y^x ## [1] 1500000 x1+z ## [1] 35 x4&lt;-(4&gt;5) x5&lt;-(y&gt;x^2) Trate de usar nombres significativos! Miren esto: Hadley Wickhams book Naming 1.3.5 Clases en R y1&lt;-50 y2&lt;-&quot;hola&quot; y3&lt;-(56&gt;60) y4&lt;-NA y5&lt;-NULL class(y1) ## [1] &quot;numeric&quot; class(y2) ## [1] &quot;character&quot; class(y3) ## [1] &quot;logical&quot; class(y4) ## [1] &quot;logical&quot; class(y5) ## [1] &quot;NULL&quot; typeof(y1) ## [1] &quot;double&quot; typeof(y2) ## [1] &quot;character&quot; typeof(y3) ## [1] &quot;logical&quot; typeof(y4) ## [1] &quot;logical&quot; typeof(y5) ## [1] &quot;NULL&quot; z&lt;-&quot;12314234&quot; class(z) ## [1] &quot;character&quot; z2&lt;-as.numeric(z) class(z2) ## [1] &quot;numeric&quot; # as.character 1.3.6 Algunas comandos adicionales rm(y) # eliminar objetos rm(y1,y2,y3,y4) # listando los objetos en memoria ls() ## [1] &quot;bs1&quot; &quot;i&quot; &quot;j&quot; &quot;v1&quot; &quot;v2&quot; &quot;v3&quot; &quot;v4&quot; &quot;v5&quot; &quot;v6&quot; &quot;v7&quot; &quot;v8&quot; ## [12] &quot;v9&quot; &quot;w&quot; &quot;x&quot; &quot;x1&quot; &quot;x2&quot; &quot;x3&quot; &quot;x4&quot; &quot;x5&quot; &quot;x6&quot; &quot;y5&quot; &quot;z&quot; ## [23] &quot;z2&quot; # remover todos los objetos en memoria rm(list=ls()) 1.4 Tipos de estructuras 1.4.1 Homogéneas Scalar: un único valor x&lt;-1 y&lt;-&quot;hola&quot; i&lt;-TRUE j&lt;-FALSE w&lt;-F Vectores: Colección de valores simples. Los vectores en R son vectores columna # definición x1&lt;-c(2,4,6) x2&lt;-c(1,2,3,4,7,9,4,2) x3&lt;-c(&quot;hola&quot;,&quot;chau&quot;,&quot;adios&quot;,&quot;hola&quot;) x4&lt;-c(T,T,T,F,F,F,F,T,F,T,F,F,F) x5&lt;-c(1,2,3,T,T,&quot;Hola&quot;) x6&lt;-c(1,2,3,T,T,F,F) # operaciones con vectores x1+x1 ## [1] 4 8 12 x1+x2 # mal ejemplo ## Warning in x1 + x2: longitud de objeto mayor no es múltiplo de la ## longitud de uno menor ## [1] 3 6 9 6 11 15 6 6 x1**2 ## [1] 4 16 36 x1/x1 ## [1] 1 1 1 x2&gt;5 ## [1] FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE log(x2) # logaritmo ## [1] 0.0000000 0.6931472 1.0986123 1.3862944 1.9459101 2.1972246 ## [7] 1.3862944 0.6931472 exp(x2) # exponencial ## [1] 2.718282 7.389056 20.085537 54.598150 1096.633158 ## [6] 8103.083928 54.598150 7.389056 sqrt(x2) # raíz cuadrada ## [1] 1.000000 1.414214 1.732051 2.000000 2.645751 3.000000 2.000000 ## [8] 1.414214 2^x2 ## [1] 2 4 8 16 128 512 16 4 2/x1 ## [1] 1.0000000 0.5000000 0.3333333 # generando vectores v1&lt;-1:10 v2&lt;-1:10000 sum(v2) #sumar ## [1] 50005000 v3&lt;-100:1 v4&lt;-99:0 v5&lt;-seq(1,100,2) v6&lt;-seq(0,1,0.01) seq(by=10,to=100,from=-20)# anotando el nombre de los argumentos ## [1] -20 -10 0 10 20 30 40 50 60 70 80 90 100 seq(-20,100,10) # respetando el orden de los argumentos ## [1] -20 -10 0 10 20 30 40 50 60 70 80 90 100 v7&lt;-rep(1,100) # repetir algo v8&lt;-rep(c(1,2,3),10) v9&lt;-rep(c(&quot;hola&quot;,&quot;cómo&quot;,&quot;estas&quot;,&quot;?&quot;),10) length(v8) # conocer el tamaño del vector ## [1] 30 length(v6) # conocer el tamaño del vector ## [1] 101 # vectores estadísticos, generación de variables aleatorias set.seed(1234) x&lt;-runif(100,10,20) mean(x) ## [1] 14.37497 x ## [1] 11.13703 16.22299 16.09275 16.23379 18.60915 16.40311 10.09496 ## [8] 12.32551 16.66084 15.14251 16.93591 15.44975 12.82734 19.23433 ## [15] 12.92316 18.37296 12.86223 12.66821 11.86723 12.32226 13.16612 ## [22] 13.02693 11.59046 10.39996 12.18800 18.10599 15.25698 19.14658 ## [29] 18.31345 10.45770 14.56091 12.65187 13.04672 15.07307 11.81096 ## [36] 17.59671 12.01248 12.58810 19.92150 18.07352 15.53334 16.46406 ## [43] 13.11824 16.21819 13.29770 15.01997 16.77095 14.84991 12.43929 ## [50] 17.65460 10.73780 13.09687 17.17272 15.04546 11.52999 15.03933 ## [57] 14.93961 17.51200 11.74650 18.48392 18.64834 10.41857 13.17182 ## [64] 10.13750 12.39026 17.06495 13.08095 15.08548 10.51647 15.64570 ## [71] 11.21480 18.92836 10.14627 17.83121 10.89961 15.19190 13.84267 ## [78] 10.70052 13.20644 16.68495 19.26400 14.71910 11.42615 15.44270 ## [85] 11.96175 18.98580 13.89500 13.10871 11.60029 18.96186 11.66394 ## [92] 19.00425 11.34078 11.31614 11.05288 15.11584 13.00199 10.26717 ## [99] 13.09647 17.42120 z&lt;-round(x,10) y&lt;-rnorm(100000,10,5) hist(y) Matrices # operaciones con matrices Arrays 1.4.2 Heterogéneas Dataframes Listas 1.5 Indexación 1.6 Loops y condiciones rm(list = ls()) x&lt;-5 ## if if(x&gt;6){ hist(rnorm(100,3,2)) } ## if else if(x&gt;6){ hist(rnorm(100,3,2)) } else { boxplot(rnorm(100,3,2)) } ## if encadenado x&lt;-60 if(x&gt;6){ hist(rnorm(100,3,2)) mean(x) } else if(x&lt;6){ boxplot(rnorm(100,3,2)) } else if(typeof(x)==&quot;double&quot;){ print(&quot;hola&quot;) } else { print(&quot;hola hola&quot;) } ##for for(i in 1:100){ print(i) } for(i in c(2,7,9,15,19)){ print(i) } for(i in c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;)){ print(i) } for(i in 1:5){ for(j in 6:10){ print(i*j) } } for(i in 1:5){ for(j in 6:10){ aux&lt;-i*j print(aux) if(aux==20){ break() print(&quot;hola&quot;) boxplot(rnorm(100,i,j)) } } } #while z&lt;-1 k&lt;-1 while(z&gt;0.0001){ print(k) z&lt;-1/k k&lt;-k+1 } 1.7 Funciones fx&lt;-function(x){ y&lt;-8*x**2 return(y) } fx(5) fx(1:10) curve(fx,xlim = c(-20,20),ylim=c(0,1000)) plot(fx) ##comando de estadisticas de tendencia central tendencia&lt;-function(x){ n&lt;-length(x) cat(&quot;media:&quot;,fill = T) print(sum(x)/n) cat(&quot;mediana:&quot;,fill = T) x&lt;-sort(x) if(n%%2==0){ me&lt;-(x[n/2]+x[n/2+1])/2 } else { me&lt;-x[ceiling(n/2)] } print(me) cat(&quot;moda:&quot;,fill = T) tt&lt;-table(x) mm&lt;-max(tt) print(names(tt)[(table(x)==mm)]) cat(&quot;media cuadrática:&quot;,fill = T) mc&lt;-sqrt(sum(x**2)/n) print(mc) cat(&quot;media armónica&quot;,fill = T) ma&lt;-n/sum(1/x) print(ma) cat(&quot;media geométrica:&quot;,fill = T) mg&lt;-prod(x)**(1/n) print(mg) } xx&lt;-scan() a&lt;-tendencia(xx) tendencia2&lt;-function(x){ n&lt;-length(x) media&lt;-sum(x)/n x&lt;-sort(x) if(n%%2==0){ me&lt;-(x[n/2]+x[n/2+1])/2 } else { me&lt;-x[ceiling(n/2)] } tt&lt;-table(x) mm&lt;-max(tt) mo&lt;-names(tt)[(table(x)==mm)] mc&lt;-sqrt(sum(x**2)/n) ma&lt;-n/sum(1/x) mg&lt;-prod(x)**(1/n) aux&lt;-list(media,me,mo,mc,ma,mg) return(aux) } a&lt;-tendencia2(xx) tendenciaF&lt;-function(x,f){ n&lt;-sum(f) media&lt;-sum(x*f)/n } 1.8 Importacion de datos #importando bases de datos getwd() setwd(&quot;C:\\\\Users\\\\PC18\\\\Documents\\\\R\\\\est383\\\\data\\\\eh18\\\\SPSS&quot;) dir() ##SPSS ## activar o instalar librerias library(foreign) eh18d&lt;-read.spss(&quot;EH2018_Discriminacion.sav&quot;, to.data.frame = T,use.value.labels=F) names(eh18d) table(eh18d$s10a_01a) attributes(eh18d)$variable.labels[5] head(eh18d) ##CSV setwd(&quot;C:\\\\Users\\\\PC18\\\\Documents\\\\R\\\\est383\\\\data\\\\eh18\\\\CSV&quot;) dir() eh18d2&lt;-read.csv2(&quot;EH2018_Discriminacion.csv&quot;) aux&lt;-read.csv(&quot;EH2018_Discriminacion.csv&quot;,sep=&quot;;&quot;) table(eh18d2$s10a_01a) daux&lt;-c(&quot;Sexo&quot;,&quot;O. Sexual&quot;,&quot;Edad&quot;,&quot;piel&quot;,&quot;Pertenencia&quot;, &quot;idioma&quot;,&quot;vestimente&quot;,&quot;procedencia&quot;,&quot;discapacidad&quot;, &quot;religion&quot;,&quot;clase&quot;,&quot;otro&quot;) for(i in 5:16){ barplot(prop.table(table(eh18d2[,i]))*100,main=daux[i-4]) } 1.9 Dataframe y exploración rm(list=ls()) setwd(&quot;C:\\\\Users\\\\PC18\\\\Documents\\\\R\\\\est383\\\\data\\\\eh18\\\\SPSS&quot;) library(foreign) dir() eh18&lt;-read.spss(&quot;EH2018_Persona.sav&quot;, to.data.frame = T,use.value.labels=F) ################################################# names(eh18)#nombres de las variable str(eh18) class(eh18) ##renombrando variables names(eh18)[c(5,6)]&lt;-c(&quot;sexo&quot;,&quot;edad&quot;) names(eh18) ##crear variable (mujer 1=mujer, 0 eoc) eh18$mujer&lt;-eh18$sexo==2 sum(eh18$mujer) mean(eh18$mujer) #exportación (&quot;write&quot;) write.dta(eh18,&quot;eh18p.dta&quot;) getwd() #excel library(readxl) install.packages(&quot;writexl&quot;) library(writexl) library(help=writexl) write_xlsx(eh18,&quot;eh18p.xlsx&quot;) apropos(&quot;read&quot;) apropos(&quot;write&quot;) install.packages(&quot;haven&quot;) library(haven) eh18$s03a_02e&lt;-substr(as.character(eh18$s03a_02e),1,120) eh18$s03a_02e&lt;-gsub(&quot; &quot;,&quot; &quot;,as.character(eh18$s03a_02e)) gsub(&quot;a&quot;,&quot;7&quot;,&quot;hola&quot;) gsub(&quot;`&quot;,&quot;&#39;&quot;,&quot;`s04a_04e`, `s04a_07ge`, `s04b_15e`, `s04b_16e`, `s04b_17e`, `s04b_18e`, `s04e_30c`, `s04f_35e`, `s05a_04`, `s05c_13_e`, `s05d_21e`, `s05d_22_e`, `s06a_06e`, `s06a_09e`, `s06a_10e`, `s06b_11a`, `s06b_11b`, `s06b_12a`, `s06b_12b`, `s06b_13`, `s06b_20e`, `s06e_34e`, `s06f_40a`, `s06f_40b`, `s06h_54e`, `s06h_55e`, `s06h_56e`, `s07a_01e1e`, `s07a_01e2e`, `s07a_02ce`, `s07b_05de`, `s07b_05ee`, `s07c_08e`, `s07c_09e`&quot;) nchar(eh18$s03a_02e) vv&lt;-c(&#39;s04a_04e&#39;, &#39;s04a_07ge&#39;, &#39;s04b_15e&#39;, &#39;s04b_16e&#39;, &#39;s04b_17e&#39;, &#39;s04b_18e&#39;, &#39;s04e_30c&#39;, &#39;s04f_35e&#39;, &#39;s05a_04&#39;, &#39;s05c_13_e&#39;, &#39;s05d_21e&#39;, &#39;s05d_22_e&#39;, &#39;s06a_06e&#39;, &#39;s06a_09e&#39;, &#39;s06a_10e&#39;, &#39;s06b_11a&#39;, &#39;s06b_11b&#39;, &#39;s06b_12a&#39;, &#39;s06b_12b&#39;, &#39;s06b_13&#39;, &#39;s06b_20e&#39;, &#39;s06e_34e&#39;, &#39;s06f_40a&#39;, &#39;s06f_40b&#39;, &#39;s06h_54e&#39;, &#39;s06h_55e&#39;, &#39;s06h_56e&#39;, &#39;s07a_01e1e&#39;, &#39;s07a_01e2e&#39;, &#39;s07a_02ce&#39;, &#39;s07b_05de&#39;, &#39;s07b_05ee&#39;, &#39;s07c_08e&#39;, &#39;s07c_09e&#39;) for(i in vv){ eh18[,i]&lt;-gsub(&quot; &quot;,&quot; &quot;,as.character(eh18[,i])) eh18[,i]&lt;-substr(eh18[,i],1,120) } write_sav(eh18,&quot;eh18p.sav&quot;) save(eh18,vv,file=&quot;eh18p.RData&quot;) rm(list=ls()) getwd() load(&quot;eh18p.RData&quot;) set.seed(123456)####semilla a&lt;-matrix(rnorm(20),5,4) apply(a, 1, sum) apply(a, 2, mean) apply(a, 1, sd) mc&lt;-function(x){ n&lt;-length(x) aux&lt;-sqrt(sum(x^2)/n) return(aux) } apply(a, 1, mc) apply(a, 2, mc) tapply(eh18$mujer,eh18$depto,mean) tapply(eh18$mujer,list(eh18$depto,eh18$area),mean) tapply(eh18$edad,list(eh18$depto,eh18$area),mean) tapply(eh18$edad&gt;60,list(eh18$depto,eh18$area),mean) tapply(eh18$edad&lt;5,list(eh18$depto,eh18$area),mean) tapply(eh18$p0,list(eh18$depto,eh18$area),mean,na.rm=T) aux&lt;-tapply(eh18$p0,list(eh18$depto,eh18$area,eh18$niv_ed_g),mean,na.rm=T) as.data.frame(aux) lapply() mapply() sapply() 1.10 Estadística descriptiva #Estadística descriptiva rm(list=ls()) setwd(&quot;C:\\\\Users\\\\PC18\\\\Documents\\\\R\\\\est383\\\\data\\\\eh18\\\\SPSS&quot;) #encuesta a hogares 2018 load(&quot;eh18p.RData&quot;) data()#muestra las bases de datos disponibles en R ChickWeight View(ChickWeight) help(&quot;ChickWeight&quot;) ##Porcentajes y tablas de fracuencias t1&lt;-table(eh18$sexo)#tabla de frcuencias t2&lt;-table(eh18$depto) t3&lt;-table(eh18$edad) barplot(t1,col=c(&quot;blue&quot;,&quot;darkgreen&quot;))#diagramas de barra barplot(t3,horiz = T) barplot(t3,col=&quot;red&quot;) ldep&lt;-c(&quot;CH&quot;,&quot;LP&quot;,&quot;CB&quot;,&quot;OR&quot;,&quot;PT&quot;,&quot;TJ&quot;,&quot;SC&quot;,&quot;BN&quot;,&quot;PD&quot;) barplot(t2,col=&quot;black&quot;,names.arg = ldep) #llevando a % t2p&lt;-prop.table(t2)*100 barplot(t2p,col=&quot;black&quot;,names.arg = ldep,ylab=&quot;%&quot;) pie(t2p) t3&lt;-as.data.frame(t3) t3$F&lt;-cumsum(t3$Freq) t3$r&lt;-prop.table(t3$Freq) t3$R&lt;-cumsum(t3$r) head(t3) table(ChickWeight$Time) table(ChickWeight$Diet) dim(table(ChickWeight$Chick)) #tabla de contingencia aux&lt;-table(ChickWeight$Chick,ChickWeight$Diet) aux[aux!=0]&lt;-1 apply(aux,2,sum) table(ChickWeight$Time) table(ChickWeight$Diet[ChickWeight$Time==0]) ##medidas de tendencia central mean(eh18$edad) median(eh18$edad) mean(eh18$ylab,na.rm = T) median(eh18$ylab,na.rm = T) hist(eh18$ylab) plot(density(eh18$ylab,na.rm = T)) locator(1) summary(eh18$ylab) #medidas de dispersion var(eh18$ylab,na.rm = T) sd(eh18$ylab,na.rm = T) max(eh18$ylab,na.rm = T)-min(eh18$ylab,na.rm = T) sd(eh18$ylab,na.rm = T)/mean(eh18$ylab,na.rm = T) #medidas de forma quantile(eh18$ylab,c(0.1,0.44,0.99),na.rm=T) hist(eh18$edad) #Coeficiente de asimetría #EDAD x&lt;-eh18$edad N&lt;-length(x) as&lt;-(sum((x-mean(x))^3)/N)/sd(x)^3 as #iNGRESO LABORAL x&lt;-eh18$ylab x&lt;-x[is.na(x)==F] x&lt;-x[complete.cases(x)] N&lt;-length(x) as&lt;-(sum((x-mean(x))^3)/N)/sd(x)^3 as #kurtosis... plot(density(rnorm(1000,sd=40)),ylim=c(0,0.08)) points(density(rnorm(1000,sd=10)),type=&quot;l&quot;,col=&quot;red&quot;) points(density(rnorm(1000,sd=5)),type = &quot;l&quot;,col=&quot;blue&quot;) lm(ylab~edad,data=eh18,weights = f) lm(ylab~-1+edad,data=eh18) summary(lm(ylab~edad,data=eh18)) 1.11 Muestreo e inferencia rm(list=ls()) N&lt;-15;n&lt;-6 choose(N,n) set.seed(123) y1&lt;-rnorm(N,10,5) set.seed(234) y2&lt;-rexp(N,3) set.seed(345) y3&lt;-runif(N,500,3000) #par?metros theta1&lt;-mean(y1) theta2&lt;-sum(y2) # sum(y3&gt;1500)/N # mean(y3&gt;1500) theta3&lt;-mean(y3&gt;1500) #pr?ctica (real) solo se tiene acceso a una #muestra U&lt;-1:10 set.seed(888) s&lt;-sample(U,n) s y1 #estimaciones mean(y1[s]);theta1 mean(y2[s])*N ; theta2 mean(y3[s]&gt;1500) ; theta3 combn(U,3) combn(y1,3) combn(y1,3,mean) #theta1 t1s&lt;-apply(combn(y1,n),2,mean) mean(t1s) theta1 hist(t1s) plot(density(t1s)) shapiro.test(t1s) #theta2 t2s&lt;-apply(combn(y2,n),2,mean)*N mean(t2s);theta2 hist(t2s) plot(density(t2s)) shapiro.test(t2s) #theta3 t3s&lt;-apply(combn(y3,n)&gt;1500,2,mean) mean(t3s);theta3 hist(t3s) plot(density(t3s)) shapiro.test(t3s) ####Inferencia a partir de una muestra #libreria survey install.packages(&quot;survey&quot;) library(survey) bd&lt;-data.frame(y1,y2,y3=y3&gt;1500) set.seed(123) s&lt;-sample(1:15,7) bds&lt;-bd[s,] bds$w&lt;-15/7 bds$pk&lt;-7/15 bds dm1&lt;-svydesign(ids=~0,probs = ~pk,data=bds) svymean(~y1,design = dm1) svytotal(~y2,design = dm1) library(help=survey) 1.12 Gráficos de origen rm(list=ls()) ################ plot(0,0)#inicia una hoja en blanco plot(0,0,type = &quot;n&quot;) x&lt;-c(3,4,7,2) y&lt;-c(0,6,9,2) plot(x,y,type=&quot;p&quot;) plot(x,y,type=&quot;h&quot;) plot(x,y,type=&quot;l&quot;) plot(x[order(x)],y[order(x)],type=&quot;l&quot;) plot(x,y,type = &quot;b&quot;) plot(x,y,type = &quot;o&quot;) par(mfrow=c(2,2)) plot(x,y,xlim=c(0,10),ylim=c(0,10),main=&quot;c/PUNTOS&quot;) plot(x,y,type=&quot;n&quot;,xlim=c(0,10),ylim=c(0,10),main = &quot;S/puntos&quot;) plot(x,y,type=&quot;n&quot;,xlim=c(0,10),ylim=c(0,10), axes = F,main=&quot;sin ejes&quot;) plot(x,y,type=&quot;n&quot;,xlim=c(0,10),ylim=c(0,10), axes = F,ann = F,main = &quot;blanco&quot;) par(mfrow=c(1,1)) plot(x,y,type=&quot;n&quot;,xlim=c(0,10),ylim=c(0,10), axes = F,ann = F) points(x,y,cex=c(1,2,3,4)+1) points(x,y,cex=c(1,2,3,4)+1,pch=15) points(x,y,cex=c(1,2,3,4)+1,pch=15,col=&quot;blue&quot;) points(x,y,cex=c(1,2,3,4)+1,pch=0:3, col=c(&quot;red&quot;,&quot;darkblue&quot;,&quot;pink&quot;,&quot;darkgreen&quot;)) #points(x,y,cex=2) pdf(&quot;figura1.pdf&quot;,width = 15,height = 5) plot(x,y,type=&quot;n&quot;,xlim=c(0,20),ylim=c(0,20), axes = F,ann = F) points(seq(2,10,2),seq(2,10,2),type=&quot;p&quot;,lwd=4, col=&quot;blue&quot;,lty=4) text(seq(2,10,2),seq(2,10,2), labels = c(&quot;p1&quot;,&quot;p2&quot;,&quot;p3&quot;,&quot;p4&quot;,&quot;p5&quot;),pos=3, cex=1:5,col=&quot;brown&quot;) axis(1,seq(0,20,10),lwd=3) axis(2,seq(0,20,5),lwd=2) axis(4,seq(0,20,5),seq(0,400,100),lwd=2) axis(3,seq(0,20,10),c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;),lwd=2) title(main=&quot;Plot en R&quot;,col.main=&quot;darkred&quot;, cex.main=3) title(xlab = &quot;Eje X&quot;,ylab=&quot;Eje Y&quot;,cex.lab=2, col.lab=&quot;gray&quot;) legend(&quot;topright&quot;,legend = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;), lwd=c(1,2,3),col=c(&quot;darkred&quot;,&quot;black&quot;,&quot;gray&quot;)) dev.off() getwd() png(&quot;figura1.png&quot;) plot(x,y,type=&quot;n&quot;,xlim=c(0,20),ylim=c(0,20), axes = F,ann = F) points(seq(2,10,2),seq(2,10,2),type=&quot;p&quot;,lwd=4, col=&quot;blue&quot;,lty=4) dev.off() pdf(&quot;sec.pdf&quot;) for(i in 1:10){ plot(i,0,xlim=c(0,10)) } dev.off() abline(h=c(2,3,4),lty=2) abline(v=c(2,3,4)) bd&lt;-as.data.frame(state.x77) bd$name&lt;-row.names(bd) head(bd) 1.13 ggplot ####################################### # Clase: gráficos en R, ggplot # Materia: Programación Estadística I # Fecha: 9 de Marzo ####################################### rm(list=ls()) ####################################### #install.packages(&quot;ggplot2&quot;) #install.packages(&quot;dplyr&quot;) #install.packages(&quot;maps&quot;) #install.packages(&quot;ggvis&quot;) library(ggplot2) library(dplyr) library(maps) library(ggvis) library(readxl) ####################################### urlfile&lt;-url(&#39;https://raw.githubusercontent.com/AlvaroLimber/EST-383/master/data/oct20.RData&#39;) load(urlfile) names(computo)[18]&lt;-&quot;MAS&quot; ####################################### #The grammar of graphics is an answer to a question: what is a statistical graphic? #base graphics 1983 #grid 2000 #lattice 1993 #ggplot 2005 #ggvis 2014 ## Datos, estetica y geometria (layers) library(ggplot2) mpg ggplot(mpg, aes(x = displ, y = hwy)) + geom_area() ggplot(computo,aes(MAS,CC))+geom_point() ggplot(mpg, aes(displ, hwy)) + geom_line() ggplot(mpg, aes(displ)) + geom_histogram() #Color tamaño y forma ggplot(mpg, aes(displ, hwy,colour = class)) + geom_point() ggplot(mpg, aes(displ, hwy,shape = drv)) + geom_point() ggplot(mpg, aes(displ, hwy,size = cyl)) + geom_point() ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = &quot;blue&quot;)) ggplot(mpg, aes(displ, hwy)) + geom_point(colour = &quot;blue&quot;) ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class+drv) #geoms geom_smooth() # ajuste y en x geom_boxplot() geom_histogram() geom_freqpoly() geom_bar() geom_path() geom_line() #ajuste de un modelo ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth() ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(method = &quot;lm&quot;) ggplot(mpg, aes(drv, hwy)) + geom_point() ggplot(mpg, aes(drv, hwy)) + geom_jitter() ggplot(mpg, aes(drv, hwy)) + geom_boxplot() ggplot(mpg, aes(drv, hwy)) + geom_violin() ggplot(mpg, aes(hwy)) + geom_histogram() #&gt; `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(mpg, aes(hwy)) + geom_freqpoly() #&gt; `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(mpg, aes(hwy)) + geom_freqpoly(binwidth = 2.5) ggplot(mpg, aes(hwy)) + geom_freqpoly(binwidth = 1) ggplot(mpg, aes(hwy)) + geom_density() ggplot(mpg, aes(displ, colour = drv)) + geom_freqpoly(binwidth = 0.5) ggplot(mpg, aes(displ, fill = drv)) + geom_histogram(binwidth = 0.5) ggplot(mpg, aes(displ, fill = drv)) + geom_histogram(binwidth = 0.5) + facet_wrap(~drv, ncol = 1) ggplot(mpg, aes(manufacturer)) + geom_bar() aa&lt;-as.data.frame(table(mpg$class)) aa ggplot(aa,aes(Var1,Freq))+ geom_bar() ggplot(aa,aes(Var1,Freq)) + geom_bar(stat = &quot;identity&quot;) ggplot(drugs, aes(drug, effect)) + geom_point() ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1 / 3) ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1 / 3) + xlab(&quot;city driving (mpg)&quot;) + ylab(&quot;highway driving (mpg)&quot;) # Remove the axis labels with NULL ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1 / 3) + xlab(NULL) + ylab(NULL) ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25) ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25) + xlim(&quot;f&quot;, &quot;r&quot;) + ylim(20, 30) #&gt; Warning: Removed 137 rows containing missing values (geom_point). # For continuous scales, use NA to set only one limit ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25, na.rm = TRUE) + ylim(NA, 30) #output p &lt;- ggplot(mpg, aes(displ, hwy, colour = factor(cyl))) + geom_point() # Save png to disk ggsave(&quot;plot.png&quot;, p, width = 5, height = 5) saveRDS(p, &quot;plot.rds&quot;) q &lt;- readRDS(&quot;plot.rds&quot;) ggplot(faithfuld, aes(eruptions, waiting)) + geom_contour(aes(z = density, colour = ..level..)) mi_counties &lt;- map_data(&quot;world&quot;) %&gt;% select(lon = long, lat, group, id = subregion) ggplot(mi_counties, aes(lon, lat)) + geom_point(size = .25, show.legend = FALSE) + coord_quickmap() ggplot(mi_counties, aes(lon, lat, group = group)) + geom_polygon(fill = &quot;white&quot;, colour = &quot;grey50&quot;) + coord_quickmap() #temas theme_bw() theme_grey() theme_linedraw() theme_light() theme_dark() theme_minimal() theme_classic() theme_void() 1.14 Shiny Shiny es una librería de RStudio orientada a crear aplicaciones web interactivas con R. Una vez instalada existen dos formas de crear una aplicación en Shiny. Una alternativa cada vez mas popular es la de crear un documento shiny junto con Markdown. Mediante un solo archivo denominando app.R Mediante dos archivos separados, el server.R y ui.R Se recomienda que en cualquiera de las dos alternativas, estos archivos estén contenidos en alguna carpeta. Existen dos partes esenciales al momento de definir una app en Shiny, el UI que es una función que define la interfaz de la aplicación y el Server que define una función con instrucciones sobre cómo construir y reconstruir los objetos R que se mostraran en la UI. La composición básica según las formas de aplicarlas son: # app.R library(shiny) ui &lt;- fluidPage( numericInput(inputId = &quot;n&quot;, &quot;Sample size&quot;, value = 25), plotOutput(outputId = &quot;hist&quot;) ) server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$n)) }) } shinyApp(ui = ui, server = server) # ui.R fluidPage( numericInput(inputId = &quot;n&quot;, &quot;Sample size&quot;, value = 25), plotOutput(outputId = &quot;hist&quot;) ) # server.R function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(input$n)) }) 1.14.1 UI Al ser UI la interfaz esta permite la interacción directa con el usuario, a estas se las denominan los entradas \\(input\\), las opciones de input son: Botón de acción: actionButton(inputId, label, icon) Enlace: actionLink(inputId, label, icon,) Check box múltiple: checkboxGroupInput(inputId,label, choices, selected, inline) Check box simple: checkboxInput(inputId, label,value) Fecha: dateInput(inputId, label, value,min, max, format, startview,weekstart, language) Rango de fecha: dateRangeInput(inputId, label,start, end, min, max, format,startview, weekstart, language,separator) Cargar archivo: fileInput(inputId, label, multiple,accept) Entrada numérica: numericInput(inputId, label, value,min, max, step) Tipo contraseña: passwordInput(inputId, label,value) Selección tipo botones: radioButtons(inputId, label,choices, selected, inline) Seleccionable: selectInput(inputId, label, choices,selected, multiple, selectize,width, size) Slider: sliderInput(inputId, label, min,max, value, step, round, format,locale, ticks, animate, * width,sep,pre, post) Enviar submitButton(text, icon) Entrada de texto textInput(inputId, label, value) Los inputs principalmente tienen dos argumentos el inputId que se refiere al identificador del input, este se utiliza en el server, y el label que es la etiqueta que aparece en la interfaz visual, estos inputs se asignan a algún objeto (xx&lt;-input()). En el server se tiene acceso al input mediante input$xx. 1.14.2 Server En cuanto el server, este usa los distintos inputs para generar las salidas (outputs), las opciones de salidas disponibles son: DT::renderDataTable(expr, options,callback, escape, env, quoted) renderImage(expr, env, quoted,deleteFile) renderPlot(expr, width, height, res, ,env, quoted, func) renderPrint(expr, env, quoted, func,width) renderTable(expr,, env, quoted, func) renderText(expr, env, quoted, func) renderUI(expr, env, quoted, func) Estos outputs render se asignan a un objeto y luego ellos deben ser incluidos dentro del UI con su correspondiente Output: dataTableOutput(outputId, icon, ) imageOutput(outputId, width, height,click, dblclick, hover, hoverDelay, inline,hoverDelayType, brush, clickId,hoverId) plotOutput(outputId, width, height, click,dblclick, hover, hoverDelay, inline,hoverDelayType, brush, clickId,hoverId) verbatimTextOutput(outputId) tableOutput(outputId) textOutput(outputId, container, inline) uiOutput(outputId, inline, container, ) y htmlOutput(outputId, inline, container, ) 1.15 Ejercicios Propuestos Crear una función que devuelva los \\(k\\) primeros números primos Crear una función que calcule la mediana para tablas de frecuencias con intervalos de clases Crear una función que calcule los Quantiles para tablas de frecuencias con intervalos de clases Realice una función para el calculo del tamaño de muestra para el muestreo aleatorio simple, considere la media, el margen de error relativo y coeficientes de confianza. Crear una función que realice la prueba de independencia Chi-cuadrado Empleando la ENDSA muestre por año y departamento el porcentaje de personas que fuman Utilizando la base de datos del COVID-19 genere un gráfico de evolución de contagios, muertes y recuperados. Use los gráficos de origen Utilizando la base de datos del COVID-19 genere un gráfico de evolución de contagios, muertes y recuperados. Use ggplot Utilizando la encuesta 2018, genere un reporte que presente: Total de población y viviendas por departamento y área Pobreza moderada por Departamento y área Indice de Gini por departamento Realice una función en Shiny empleando la base de datos electoral del \\(20o\\) que permita ver los resultados por recinto, seleccionando, su país, departamento, municipio, recinto. Usando la EH 2018, determine el porcentaje de personas que sufrieron un Atraco (Robo a personas) en la vía pública en los últimos 12 meses. "]]
