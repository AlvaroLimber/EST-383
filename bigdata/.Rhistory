library(R.oo)
detach("package:R.oo", unload = TRUE)
5*9
90-67
56^3
5*0
5*8
89+90
5*8
89+90
67/6
45^7
5*8
89+90
67/6
45^7
5*8
89+90
67/6
45^7
5*8
89+90
67/6
45^7
5*8
89+90
67/6
45^7
5*8
89+90
67/6
45^7
5*8
89+90
67/6
45^7
45^7
89+90
5*8
5*8
89+90
67/6
45^7
f(x)=y
exp(90)
exp(0)
exp(1)
log(10)
sqrt(25)
sqrt(25)
sqrt(x=25)
sqrt(25)
sqrt(x=25)
sqrt(25)
sqrt(x=25)
# f(x)=y
exp(90) # exponencial
# Sirve para realizar comentarios
?sqrt
?log
log(10)
log(10,base=10)
log(x=10,base=10)
log(x=10,base=5)
log(x=10,base=5)
log(10,5)
log(10,5)
log(5,10)
log(base=5,x=10)
log(x=10,base=5)
log(10,5)
log(base=5,x=10)
log(5,10)
log(5,10)
log(base=5,x=10)
exp(0)
?log
log(base=5,x=10)
log(20) ; exp(0)
log(20) ; exp(0) ; 5*6 ; 10^10
5>9
5<9
5*2
5^2
5^2
5**2
5**2
5^2
23 %% 2
24 %% 2
27 %% 2
24 %% 2
24/2
24/3
24/7
24%/%7
24%/%7
# Símbolos Lógicos
5 == 6
5^2 == 25
5 != 6
25 == 25
25 != 25
5 != 6 # desigualdad
25 != 25
(5>10)
!(5>10) # negación
5 == 5
5>6
(5==5) & (5>6) # Y lógico
(5==5) & (5<6) # Y lógico
(5==5) & (5>6) # Y lógico
(5==5) & (5<6) # Y lógico
(5==5) && (5>6) # Y lógico
(5==5) && (5<6) # Y lógico
(5==5) | (5>6) # ó lógico
(5==5) | (5<6) # ó lógico
(5!=5) | (5>6) # ó lógico
x <- 4
x1 = 4
4 -> x2
xxxxcsdvsdvsdcs<-4
x*(x1^x2)
x <- 5
x <- 5
x*(x1^x2)
memory.size()
memory.size(x)
object.size(x)
object.size(x2)
# Asignación o creación de objetos (estructuras, variables)
x <- 50
object.size(x)
y1<-50
y2<-"hola"
y3<-(56>60)
y4<-NA
y5<-NULL
class(y1)
class(y2)
class(y3)
class(y4)
class(y5)
v1 <- c(4,2,6,7,12)
v2 <- c("hola","como","estas","adios")
v2 <- c("hola","cómo","estás","adios")
v2
v3<- c(4,2,6,7,12,"hola")
v1
v1 > 5
v4<-(v1 > 5)
v5<-c(-9,pi,3/7)
v5
class(v5)
typeof(v5)
typeof(v1)
typeof(v1)
typeof(2)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
v3<- c(4,2,6,7,12,"hola")
v3
class(v5)
class(v3)
typeof(v3)
1:100
1:1000
100:50
(-10):10
1:1000
sum(1:1000)
rep(2,20)
rep("hola",20)
v1<-rep("hola",20)
v2<-rep("chau",20)
v2
rep(c(4,5),10)
v3<-rep(c(4,5),10)
v3
v3*4
v3+4
v3^2
v3+v3
v3*v3
v1+v2
v1*v2
paste(v1,v2)
paste(v1,v2,v3)
paste(v1,v2,v3,"umsa")
seq(0,1,0.01)
seq(1,1000,2)
v3
v3*6
length(v2) # el tamaño del vector
v3
v3==4
(v3==4)
v4<-(v3==4)
v4
sum(v4)
v4*1
mean(v4) # media de un vector
v3
v3
v3[16]
v3[1:5]
v3[1:5]
v3[c(1,2,3,4,5)]
v3[1:5]
v3[c(1,2,3,4,5)]
v3[1:5]
v3[c(1,2,3,4,5)]
v3[v3==5]
v4
v1
v1[v3==5]
v3
v3[16]
v3[16]<-80
v3
v3[1:5]<-seq(0,50,10)
v3[1:5]<-seq(0,40,10)
v3
v3[v3==5]
v3[v3==5]<-0
v3
runif(100,0,10) # dist. Uniforme
rbinom(100,10,0.4)
rnorm(100,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
set.seed(12345) #semilla
rnorm(10,40,6)
set.seed(12345) #semilla
rnorm(10,40,6)
set.seed(12345) #semilla
rnorm(10,40,6)
set.seed(12345) #semilla
rnorm(10,40,6)
set.seed(12345) #semilla
rnorm(10,40,6)
rnorm(10,40,6)
set.seed(292020) #semilla
rnorm(10,40,6)
?runif()
set.seed(292020) #semilla
rnorm(10,40,6)
set.seed(292020) #semilla
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
rnorm(10,40,6)
set.seed(292020) #semilla
rnorm(10,40,6)
a1<-matrix(c(1,2,3,4,5,6),3,2) # 3 x 2
a1
1:100
matrix(1:100,10,10) # 10,10
?matrix
matrix(1:100,10,10,byrow=T)
matrix(1:100,10,10) # 10,10
matrix(1:100,10,10) # 10,10
a1
t(a1) # transpuesta
matrix(1,3,5)
matrix(1:2,3,5)
matrix("hola",5,10)
matrix(c(2,4,6,"hola"),5,6)
a2<-matrix(c(2,4,6,"hola"),5,6)
a2
as.numeric(a2)
as.numeric(a2)
matrix(as.numeric(a2),5,6)
a1
v3
v1<-1:5
a1
v1<-1:5
#funciones
a1
v1
a1*a1
a1+a1
#funciones
a1
a1+a1
a1+t(a1)
a1/a1
a1*a1
a1 %*% a1 #
a1 %*% t(a1) # (3x2) (2x3) = (3x3)
v1
v1 %*% t(v1)  # (5x1) (1x5)
t(v1) %*% v1  # (1x5) (5x1)
diag(1,5,5)
diag(1:5,5,5)
a1 %*% t(a1)
a1 %*% t(a1)
a2<-a1 %*% t(a1)
a2
det(a2)
set.seed(123)
a3<-matrix(rbinom(16,10,0.6),4,4)
a3
set.seed(123)
a3<-matrix(rbinom(16,10,0.6),4,4)
a3
det(a3)
solve(a3)
a3^(-1)
1/a3
solve(a3) %*% a3
a3
solve(a3) %*% a3
round(solve(a3) %*% a3,1)
round(solve(a3) %*% a3,2)
round(solve(a3) %*% a3,1)
a3 %*% t(a3)
a4<-(a3 %*% t(a3))
a4
det(a4)
eigen(a4) #
lu
svg
?eigen(a4) # Descomposición espectral
svd(a4)
svd(a4)
eigen(a4)
a1
<- , = ->
## Indexación
a3
<- , = ->
## Indexación
a3[2,3 ]
a3[2,3 ]<-40
a3
a3[2,]
a3[,3]
a3[c(1,4),]
a3[,c(2,4)]
a3[c(1,4),c(2,4)]
a3
a3[,-3]
a5<-a3[,-3]
a5
a5
cbind(a5,1:4) # unir columnas
cbind(1:4,a5)
a5
rbind(a5,1:3)
a3
a3[,c(3,4,2,1)]
a3[,c(3,4,2,1)]
a3
a3[,c(3,4,2,1)]
a6<-a3[,c(3,4,2,1)]
a6
a3
a3[,2]
a3[2,]
sort(a3[2,])
order(a3[2,])
oo<-order(a3[2,])
a3
a3[,oo]
seq(1,100,2)
1/seq(1,100,2)
rep(c(1,-1),25)
a<-1/seq(1,100,2)
b<-rep(c(1,-1),25)
a*b
sum(a*b)
pi/4
abs(sum(a*b)-pi/4)
abs(sum(a*b)-pi/4)
abs(sum(a*b)-pi/4)
k=0.01
