a*b
sum(a*b)
pi/4
abs(sum(a*b)-pi/4)
abs(sum(a*b)-pi/4)
abs(sum(a*b)-pi/4)
k=0.01
a<-1/seq(1,100,2)
b<-rep(c(1,-1),25)
abs(sum(a*b)-pi/4)
b
a<-1/seq(1,100,2)
a
b<-rep(c(1,-1),25)
a*b
sum(a*b)
pi/4
sum(a*b)-pi/4
sum(a*b)-pi/4
abs(sum(a*b)-pi/4)
array()
sexo<-c("H","M","M","H","M")
edad<-c(20,23,24,30,22)
salario<-c(0,3000,1000,0,0)
bd1<-data.frame(sexo,edad,salario)
bd1
class(bd1)
typeof(bd1)
class(bd1)
typeof(bd1)
class(bd1)
bd1[,2]
bd1[3,]
bd1[,"edad"]
bd1[,"salario"]
bd1$edad
bd1$salario
bd1$sexo
bd2<-data.frame(sexo=c("H","M","M","H","M"),
edad=c(20,23,24,30,22),
salario=c(0,3000,1000,0,0))
bd2
matrix(1:20,4,5)
a<-matrix(1:20,4,5)
a
bd3<-as.data.frame(a)
bd3
dim(bd1)
names(bd1)
names(bd1)[2]
names(bd1)[2]<-"EDAD"
bd1
l1<-list(bd1,bd2,bd3,"hola",seq(1,1000,0.01))
l1
class(l1)
l2<-list(BD1=bd1,bd2,bd3,"hola",seq(1,1000,0.01))
l2
l2<-list(BD1=bd1,BD2=bd2,BD3=bd3,scalar="hola",vector=seq(1,1000,0.01))
l2
# comando para conocer la estructura de un dataframe o una lista
str(l1)
str(l2)
str(bd1)
l1[[1]]
l1[[4]]
l1[[2]]
l1[[2]][1,3]
l2$vector
l2$BD2
l2$BD3
l2$BD3[2,3]
l2$BD3$V3
l2[[3]]
l2$BD3
l2$BD3
l2[[3]]
l2$BD3
l2[[3]]
l3<-list(l1,l2,bd1,bd2,"hola")
str(l3)
l3[[2]]
l3[[2]][[2]]
str(l3)
l3[[2]][[2]]
l3[[2]][[2]]$edad
l3[[2]]
a
a
for(i in 1:10){
a
}
for(i in 1:10){
print(a)
}
1:10
for(i in 1:10){
print(i)
print(a)
}
for(i in 1:10){
print(i)
print(a)
z<-i^2
print(z)
}
ddep<-c("ch","lp","cb","or","pt","tj","sc","bn","pd")
for(j in ddep){
print(j)
}
9*50
for(j in ddep){
print(j)
for(i in seq(1,100,2)){
print(paste(j,":",i))
}
}
## if: Acciones basadas en codiciones
x<-5
## if: Acciones basadas en codiciones
x<-5
if(x>2){
print(hola)
}
## if: Acciones basadas en codiciones
x<-5
if(x>2){
print("hola")
}
## if: Acciones basadas en codiciones
x<-0
if(x>2){
print("hola")
}
x<-0
if(x>2){
print("hola")
} else {
print("chau")
}
x<-6
if(x>2){
print("hola")
} else {
print("chau")
}
x<-6
if(x==2){
print("a")
} if(x==3){
print("b")
} if(x==4){
print("c")
} if(x>4){
print("d")
} else {
print("e")
}
x<-6
if(x==2){
print("a")
} if (x==3){
print("b")
} if (x==4){
print("c")
} if (x>4){
print("d")
} else {
print("e")
}
if(x==2){
print("a")
} else if (x==3){
print("b")
} else if (x==4){
print("c")
} else if (x>4){
print("d")
} else {
print("e")
}
x<-6
if(x==2){
print("a")
} else if (x==3){
print("b")
} else if (x==4){
print("c")
} else if (x>4){
print("d")
} else {
print("e")
}
x<-0
if(x==2){
print("a")
} else if (x==3){
print("b")
} else if (x==4){
print("c")
} else if (x>4){
print("d")
} else {
print("e")
}
x<-2.5
if(x==2){
print("a")
} else if (x==3){
print("b")
} else if (x==4){
print("c")
} else if (x>4){
print("d")
} else {
print("e")
}
x<-2.4
if(x==2){
print("a")
} else if (x==3){
print("b")
} else if (x==4){
print("c")
} else if (x>4){
print("d")
} else {
print("e")
}
x<-2
if(x==2){
print("a")
} else if (x==3){
print("b")
} else if (x==4){
print("c")
} else if (x>4){
print("d")
} else {
print("e")
}
for(i in 1:5){
print(i)
if(i==3){
print("hola")
}
}
break
for(i in 1:5){
print(i)
if(i==3){
break
print("hola")
}
}
for(i in 1:5){
print(i)
if(i==3){
print("hola")
break
}
}
for(i in 1:5){
print(i)
if(i==3){
print("hola")
}
print("chau")
}
for(i in 1:5){
print(i)
if(i==3){
next
print("hola")
}
print("chau")
}
for(i in 1:5){
print(i)
next
if(i==3){
print("hola")
}
print("chau")
}
for(i in 1:5){
print(i)
if(i==3){
print("hola")
}
next
print("chau")
}
for(i in 1:5){
print(i)
if(i==3){
print("hola")
}
print("chau")
next
}
x<-0
while(x==0){
print("hola")
}
x<-0
while(x<1000){
print(paste("hola",x))
x<-x+1
}
ss<-1/(2^i)
ss
i<-0
k<-0.01
vf<-2
ss<-(1/(2^i))
ss
(sum(ss))
(sum(ss)-vf)
abs(sum(ss)-vf)
abs(sum(ss)-vf)>k
k<-0.01
i<-0
vf<-2
ss<-(1/(2^i))
while(abs(sum(ss)-vf)>k){
i<-i+1
ss<-c(ss,(1/(2^i)))
}
ss
sum(ss)
k<-0.001
i<-0
vf<-2
ss<-(1/(2^i))
while(abs(sum(ss)-vf)>k){
i<-i+1
ss<-c(ss,(1/(2^i)))
}
ss
sum(ss)
a*b
a<-1/seq(1,100,2)
b<-rep(c(1,-1),25)
a*b
abs(sum(a*b)-pi/4)
fx<-function(x){
y<-x^2
return(y)
}
fx(x=4)
fx(5)
fx<-function(x){
y<-x^2
return(y)
}
fx(x=4)
fx(5)
y<-60
fx(40)
fx(40)
fx(40)
fx(40)
fx(40)
fx(40)
fx(1:10)
a<-matrix(3,5,5)
a
fx(a)
fx(10)
z<-fx(10)
z
mean(1:10)
z1<-mean(1:10)
sum(1:10)
z2<-sum(1:10)
z
z1
z2
curve(fx)
curve(fx,xlim=c(-5,5),ylim=c(-5,5))
gx<-function(x){
y<- exp(-x^2)
return(y)
}
curve(gx,xlim=c(-5,5),ylim=c(-5,5))
curve(gx,xlim=c(-3,3),ylim=c(0,2))
curve(gx,xlim=c(-3,3),ylim=c(0,1.5))
integrate(gx,0,2)
x<-rbinom(10,4,0.4)
x
table(x)
*
table(x)
x
*
table(x)
table(x)
table(x)
data.frame(table(x))
t1<-data.frame(table(x))
t1
t1
t1$Freq
max(t1$Freq)
aux<-max(t1$Freq)
t1[,"x"]
t1[t1$Freq==aux,"x"]
t1$x
t1$Freq==aux
t1$x[t1$Freq==aux]
t1[t1$Freq==aux,"x"]
t1$x[t1$Freq==aux]
mtendencia<-function(x){
#Media
media<-mean(x)
#Mediana
mediana<-median(x)
#Moda
t1<-data.frame(table(x))
aux<-max(t1$Freq)
#t1[t1$Freq==aux,"x"]
moda<-t1$x[t1$Freq==aux]
#guardar los objetos
y<-list(media=media,mediana=mediana,moda=moda)
return(y)
}
x
mtendencia(x)
mtendencia2<-function(x){
#Moda
t1<-data.frame(table(x))
moda<-t1$x[t1$Freq==max(t1$Freq)]
#guardar los objetos
return(list(media=mean(x),mediana=median(x),moda=moda))
}
mtendencia(x)
mtendencia2(x)
mtendencia("hola")
mtendencia(c("hola","chau"))
x
class(x)
typeof(x)
is.numeric(x)
is.numeric(x)
is.numeric(x)
is.numeric(x)
mtendencia3<-function(x){
if(is.numeric(x)){
#Moda
t1<-data.frame(table(x))
moda<-t1$x[t1$Freq==max(t1$Freq)]
#guardar los objetos
return(list(media=mean(x),mediana=median(x),moda=moda))
} else {
print("El vector no es numÃ©rico")
}
}
mtendencia3("hola")
mtendencia3(1:100)
x
x<-6
x
gx<-function(x,y){
cov1<-cov(x,y)
cor1<-cor(x,y)
# y = b0 +b1 x+e
mod1<-summary(lm(y~x))
return(covarianza=cov1,correlacion=cor1,rlineal=mod1)
}
x<-rnorm(100,50,7)
y<-rnorm(100,60,5)
x1<-rnorm(100,50,7)
y1<-rnorm(100,60,5)
gx(x=x1,y=y1)
gx<-function(x,y){
cov1<-cov(x,y)
cor1<-cor(x,y)
# y = b0 +b1 x+e
mod1<-summary(lm(y~x))
y<-list(covarianza=cov1,correlacion=cor1,rlineal=mod1)
return(y)
}
gx(x=x1,y=y1)
data()
# nota: el R ofrece bases de datos cargadas en el sistema
data()
iris
?iris
?longley
## definir el directorio de trabajo
getwd() # conocer el directorio de trabajo
setwd("C:\\Users\\ALVARO\\Box\\UMSA\\2019\\anomalias") # cambiar el directorio de trabajo
## definir el directorio de trabajo
getwd() # conocer el directorio de trabajo
dir()
setwd("~/data/eh")
## definir el directorio de trabajo
getwd() # conocer el directorio de trabajo
setwd("C:\\Users\\ALVARO\\Box\\UMSA\\2019\\anomalias") # cambiar el directorio de trabajo
setwd("C:\\Users\\ALVARO\\Box\\UMSA\\2019\\anomalias") # cambiar el directorio de trabajo
## definir el directorio de trabajo
getwd() # conocer el directorio de trabajo
## definir el directorio de trabajo
getwd() # conocer el directorio de trabajo
dir()
?read.csv
# csv
bd_21f<-read.csv("21f.csv",sep="|")
str(bd_21f)
# csv
bd_21f<-read.csv("21f.csv",sep="|",encoding="UTF-8")
str(bd_21f)
